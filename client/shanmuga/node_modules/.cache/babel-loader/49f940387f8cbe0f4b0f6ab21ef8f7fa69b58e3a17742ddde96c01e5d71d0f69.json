{"ast":null,"code":"var _jsxFileName = \"F:\\\\MoorthyStore\\\\client\\\\shanmuga\\\\src\\\\AdminDashboard\\\\ProductInsert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductInsert = () => {\n  _s();\n  const [products, setProducts] = useState({\n    pname: '',\n    price: '',\n    description: '',\n    category: '',\n    stock: '',\n    seller: ''\n  });\n  const [images, setImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const categories = ['amplifiers', 'speakers', 'televisions', 'hometheatres', 'spares'];\n  const saveProducts = e => {\n    try {\n      e.preventDefault();\n      const formData = new FormData();\n      images.forEach(image => {\n        formData.append('images', image);\n      });\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      axios.post('http://localhost:5000/api/product/insertproducts', products, formData, {\n        headers: headers\n      }).then(res => {\n        alert('signup successfully');\n        if (res.data[0].success == 'true') {\n          alert(\"product insert successfully\");\n          console.log(res.data[1]);\n        }\n      });\n    } catch (err) {}\n  };\n  const updateField = e => {\n    setProducts({\n      ...products,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveProducts,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Name\",\n        onChange: e => updateField(e.target.value),\n        value: products.pname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        onChange: e => updateField(e.target.value),\n        value: products.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter product description\",\n        onChange: e => updateField(e.target.value),\n        value: products.descriptiondescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category_field\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => updateField(e.target.value),\n        className: \"form-control\",\n        id: \"category_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: products.category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Stocks\",\n        onChange: e => updateField(e.target.value),\n        value: products.stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Seller Name\",\n        onChange: e => updateField(e.target.value),\n        value: products.seller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductInsert, \"JmzXqRV3muZcL97A1aNPuTwm/oQ=\");\n_c = ProductInsert;\nexport default ProductInsert;\nvar _c;\n$RefreshReg$(_c, \"ProductInsert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProductInsert","_s","products","setProducts","pname","price","description","category","stock","seller","images","setImages","imagesPreview","setImagesPreview","categories","saveProducts","e","preventDefault","formData","FormData","forEach","image","append","headers","post","then","res","alert","data","success","console","log","err","updateField","target","name","value","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","descriptiondescription","htmlFor","className","id","map","_c","$RefreshReg$"],"sources":["F:/MoorthyStore/client/shanmuga/src/AdminDashboard/ProductInsert.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst ProductInsert = () => {\r\n\r\n\r\n    const [products, setProducts] = useState({\r\n        pname: '',\r\n        price: '',\r\n        description: '',\r\n        category: '',\r\n        stock: '',\r\n        seller: '',\r\n    })\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n    const categories = [\r\n        'amplifiers',\r\n        'speakers',\r\n        'televisions',\r\n        'hometheatres',\r\n        'spares'\r\n    ];\r\n\r\n\r\n    const saveProducts = (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const formData = new FormData();\r\n            images.forEach (image => {\r\n                formData.append('images', image)\r\n            })\r\n            const headers = {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            axios.post('http://localhost:5000/api/product/insertproducts', products, formData,{\r\n                headers: headers\r\n            }).then(res => {\r\n                alert('signup successfully')\r\n                if (res.data[0].success == 'true') {\r\n                    alert(\"product insert successfully\")\r\n                    console.log(res.data[1]);\r\n                }\r\n            })\r\n        }\r\n        catch (err) {\r\n        }\r\n    }\r\n    const updateField = e => {\r\n\r\n        setProducts({\r\n            ...products,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={saveProducts}>\r\n                <input type='text' placeholder='Product Name' onChange={e => updateField(e.target.value)} value={products.pname} />\r\n                <input type='text' placeholder='Price' onChange={e => updateField(e.target.value)} value={products.price} />\r\n                <textarea placeholder='Enter product description' onChange={e => updateField(e.target.value)} value={products.descriptiondescription}></textarea>\r\n                <label htmlFor=\"category_field\">Category</label>\r\n                <select onChange={e => updateField(e.target.value)} className=\"form-control\" id=\"category_field\">\r\n                    <option value=\"\">Select</option>\r\n                    {categories.map(category => (\r\n                        <option key={category} value={products.category}>{category}</option>\r\n                    ))}\r\n                </select>\r\n                <input type='number' placeholder='Stocks' onChange={e => updateField(e.target.value)} value={products.stock} />\r\n                <input type='text' placeholder='Seller Name' onChange={e => updateField(e.target.value)} value={products.seller} />\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInsert"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}